<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd"
>
    
    <!-- 启动扫描 action下所有的controller -->
	<context:component-scan base-package="com.**.action"/>
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解bean的映射 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		 <property name="messageConverters">		 	  
	         <list>	         		         	
	             <bean class = "org.springframework.http.converter.StringHttpMessageConverter"> 
	                <property name = "supportedMediaTypes"> 
	                     <list> 
	                         <value>text/plain;charset=UTF-8</value>
	                     </list> 
	                </property> 
	             </bean>	              
	         </list> 
  		 </property>		
	</bean>	
	<!-- ③支持spring mvc新的注解类型 详细spring3.0手册 15.12.1 mvc:annotation-driven-->
	<mvc:annotation-driven/>
	
	 <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
		<property name="contentType" value="text/html;charset=utf-8"/>
	</bean>
	
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    		
    	<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />			
			</map>
		</property>
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false"/>
		<property name="defaultViews">
			<list>
				<!-- for application/json -->
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<!-- for application/xml -->				 
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView" >
					<property name="marshaller" >
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller" p:autodetectAnnotations="true" />							
					</property>
				</bean>				
			</list>
		</property>
    </bean>
     <!-- 拦截器 -->   
     <mvc:interceptors>
        <mvc:interceptor>
            <!-- 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* -->
            <mvc:mapping path="/**" />
            <bean id="tokenInterceptor" class="com.mcu32.firstq.wechat.interceptor.TokenInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- <mvc:interceptors>   
        多个拦截器,顺序执行   
        <mvc:interceptor>   
           <mvc:mapping path="/entryOrJsonController/*" />如果不配置或/*,将拦截所有的Controller   
           <bean class="com.wy.interceptor.CommonInterceptor"></bean>   
        </mvc:interceptor>   
    </mvc:interceptors> -->
	<!-- Mapping exception to the handler view -->
	 <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
	     <property name="defaultErrorView" value="/commons/error"/>
        <property name="exceptionMappings">  
            <props>  
            </props>  
        </property>  
    </bean>  
    
	<!-- 文件上传大小设定 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过5000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="52428800"/>
        <property name="maxInMemorySize">  
           <value>2048</value>  
        </property> 
    </bean>
	
	<mvc:resources mapping="/commons/**" location="/WEB-INF/views/commons/" />

	<mvc:default-servlet-handler/>
</beans>
