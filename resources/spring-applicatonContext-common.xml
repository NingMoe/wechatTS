<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
            http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd"
      >
    <!-- 定义受环境影响易变的变量，例如数据库配置属性文件，应用程序属性文件等 -->
	<context:property-placeholder location="classpath:*.properties"/>
	
	<!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 -->
	<context:component-scan base-package="com.**.service,bean" />
	
    <!-- 1、配置DataSource数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="100" />
		<property name="maxIdle" value="30" />
		<property name="maxWait" value="500" />
		<property name="poolPreparedStatements" value="false" />
		<property name="defaultAutoCommit" value="false" />
    </bean> 
    
    <!-- 配置邮件服务器内容 -->
    <bean id="mail" class="com.mcu32.firstq.wechat.mail.bean.SendMail" >
    	<property name="smtpServer" value="${mail.smtpServer}" />
    	<property name="port" value="${mail.port}" />
    	<property name="username" value="${mail.username}" />
    	<property name="password" value="${mail.password}" />
    	<property name="from" value="${mail.from}" />
    	<property name="url" value="${mail.url}" />
    	<property name="startUp" value="${mail.startUp}" />
    </bean>
    
    
    <!-- 2、myBsties的SqlSesstion Factory 定义 ↓ mybatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录，省略Configuration.xml里手工配置 -->
		<property name="mapperLocations" value="classpath*:/com/**/dao/**/*Mapper.xml"/>
	</bean>
	<!-- SqlSession Factory 定义 ↑ -->  

	<!-- 3、mybaties自动扫描加载sql映射文件，MapperScannerConfigurer定义，用于扫描Mapper DAO类 ↓ -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.**.dao.**"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
    <!-- MapperScannerConfigurer定义，用于扫描Mapper DAO类 ↑ -->
	
	<!-- 4、数据库事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- ↓ ↓ 使用注解事务 ↓ ↓ -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	<!-- ↑ ↑ 使用注解事务 ↑ ↑  -->
    
    
    <tx:advice id="txAdvice" transaction-manager="transactionManager">   	
        <tx:attributes>
            <tx:method name="select*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="get*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="do*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
            <tx:method name="*" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service..*.*(..))" order="1"/>
    </aop:config>
    
   <!-- 公共dao -->
    <context:component-scan base-package="com.**.dao" />
</beans>